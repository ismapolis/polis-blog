---
interface Props {
  title: string;
  description: string;
  publicationDate: Date;
  category: string;
  slug: string;
}

const { title, description, publicationDate, category, slug } = Astro.props;

const date = new Date(publicationDate);
const formattedDate = date.toLocaleDateString('en-UK', {
  year: 'numeric',
  month: 'short',
  day: 'numeric'
});
---

<article class="post-card" transition:name={`post-card-${slug}`}>
  <a href={`/posts/${slug}`} class="post-link" aria-label={`Read more about ${title}`}>
    <div class="post-meta">
      <span class="category" aria-label={`Category: ${category}`}>{category}</span>
      <time datetime={date.toISOString()} aria-label={`Published on ${formattedDate}`}>{formattedDate}</time>
    </div>
    <h3 class="post-title" transition:name={`post-title-${slug}`}>
      {title}
    </h3>
    <p class="post-description" transition:name={`post-description-${slug}`}>{description}</p>
    <div class="post-arrow" aria-hidden="true">
      <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
        <path d="M5 12h14M12 5l7 7-7 7"/>
      </svg>
    </div>
  </a>
</article>

<style>
  .post-card {
    position: relative;
    padding: 1.5rem;
    border: 1px solid var(--color-border);
    border-radius: 12px;
    background: var(--color-card);
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    overflow: hidden;
  }

  .post-card:hover {
    transform: translateY(-4px);
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);
    border-color: var(--color-accent);
  }

  .post-link {
    display: block;
    text-decoration: none;
    color: inherit;
    position: relative;
    background-image: none !important;
    background-size: initial !important;
  }

  .post-link:hover {
    background-image: none !important;
    background-size: initial !important;
    text-decoration: none;
  }

  .post-link:focus {
    outline: none !important;
    outline-offset: 2px;
    border-radius: 8px;
  }

  .post-meta {
    display: flex;
    gap: 1rem;
    margin-bottom: 0.75rem;
    font-size: 0.875rem;
    color: var(--color-text-muted);
    align-items: center;
  }

  .category {
    text-transform: capitalize;
    color: var(--color-accent);
    font-weight: 600;
    padding: 0.25rem 0.75rem;
    background: var(--color-link-bg);
    border-radius: 20px;
    font-size: 0.75rem;
    letter-spacing: 0.5px;
  }

  .post-title {
    margin: 0;
    margin-bottom: 0.75rem;
    font-weight: 700;
    font-size: var(--step-1);
    line-height: 1.3;
    color: var(--color-text-base);
    transition: color 0.3s ease;
  }

  .post-card:hover .post-title {
    color: var(--color-accent);
  }

  .post-description {
    margin: 0;
    color: var(--color-text-muted);
    line-height: 1.6;
    font-size: var(--step--1);
  }

  .post-arrow {
    position: absolute;
    top: 1.5rem;
    right: 1.5rem;
    opacity: 0;
    transform: translateX(-10px);
    transition: all 0.3s ease;
    color: var(--color-accent);
  }

  .post-card:hover .post-arrow {
    opacity: 1;
    transform: translateX(0);
  }

  /* Focus styles for keyboard navigation */
  .post-card:focus-within {
    outline: 2px solid var(--color-accent);
    outline-offset: 2px;
  }

  /* Reduced motion support */
  @media (prefers-reduced-motion: reduce) {
    .post-card,
    .post-card::before,
    .post-title,
    .post-arrow {
      transition: none;
    }
  }

  /* Container queries for responsive design */
  @container (min-width: 400px) {
    .post-card {
      padding: 2rem;
    }
    
    .post-arrow {
      top: 2rem;
      right: 2rem;
    }
  }
</style>
