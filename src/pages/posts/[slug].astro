---
import { getCollection } from 'astro:content';
import Breadcrumbs from '@components/Breadcrumbs.astro';
import Layout from '@layouts/Layout.astro';
import { formatDate } from '../../utils/date';
import { render } from 'astro:content';

export async function getStaticPaths() {
  const posts = await getCollection('posts');
  
  return posts.map(post => ({
    params: { slug: post.data.slug },
    props: { post },
  }));
}

const { post } = Astro.props;
const { Content } = await render(post);
---

<Layout title={post.data.title} description={post.data.description}>
  <Breadcrumbs path={['posts', post.data.title]} />
  <article class="page-content">
    <header class="post-header">
      <h1>{post.data.title}</h1>
      <hr/>
      <div class="post-meta">
        <time datetime={post.data.publicationDate.toISOString()}>
          {formatDate(post.data.publicationDate)}
        </time>
        {post.data.tags?.length > 0 && (
          <div class="tags">
            {post.data.tags.map((tag) => (
              <span class="tag" aria-label={`Tag: ${tag}`}>{tag}</span>
            ))}
          </div>
        )}
        <span class="author">By {post.data.author}</span>
      </div>
    </header>
    
    <Content />
  </article>
</Layout>

<style>
  .post {
    max-width: var(--max-width);
    margin: 0 auto;
    padding: 2rem 1rem;
  }

  .post-header {
    margin-bottom: 2rem;
  }

  h1 {
    font-size: var(--step-4);
    margin: 0 0 1rem;
    color: var(--color-text-base);
  }

  .post-meta {
    display: flex;
    flex-wrap: wrap;
    gap: 0.75rem 1rem;
    color: var(--color-text-base);
    font-size: var(--step--1);
    align-items: center;
  }

  .tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.4rem;
  }

  .tag {
    border: 1px solid var(--color-accent);
    padding: 0.25rem 0.6rem;
    border-radius: 6px;
    text-transform: capitalize;
    color: var(--color-accent);
    font-weight: 500;
    font-size: 0.8rem;
    transition: background 0.2s ease, color 0.2s ease;
  }

  .tag:hover {
    background: var(--color-accent);
    color: var(--color-bg);
  }

  .author {
    opacity: 0.8;
  }

  .page-content :global(strong),
  .page-content :global(b) {
    color: var(--color-accent);
  }
</style>
